// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniversityApi.DbModels;

#nullable disable

namespace UniversityApi.Migrations
{
    [DbContext(typeof(universitydbContext))]
    partial class universitydbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "t_pwr_fac", new[] { "Ogólnouczelniana", "Architektury", "Budownictwa", "Chemiczny", "Informatyki i Telekomunikacji", "Elektryczny", "Geoinżynierii", " Górnictwa i Geologii", "Inżynierii Środowiska", "Zarządzania", "Mechaniczno-Energetyczny", "Mechaniczny", "Podstawowych Problemów Techniki", "Elektroniki Fotoniki i Mikrosystemów", "Matematyki", "Wydział Zamiejscowy PWr", "Techniczno-Inżynieryjny ZOD" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "t_pwr_fac_sh", new[] { "PWr", "W1", "W2", "W3", "W4N", "W5", "W6", "W7", "W8N", "W9", "W10", "W11", "W12N", "W13", "W15", "F3" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "citext");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniversityApi.DbModels.ContractDetail", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<bool?>("AcceptingDoctoral")
                        .HasColumnType("boolean")
                        .HasColumnName("accepting_doctoral");

                    b.Property<bool?>("AcceptingPostgraduate")
                        .HasColumnType("boolean")
                        .HasColumnName("accepting_postgraduate");

                    b.Property<bool?>("AcceptingUndergraduate")
                        .HasColumnType("boolean")
                        .HasColumnName("accepting_undergraduate");

                    b.Property<DateTime?>("ConclusionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("conclusion_date");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiration_date");

                    b.Property<int?>("VacancyMaxPositions")
                        .HasColumnType("integer")
                        .HasColumnName("vacancy_max_positions");

                    b.Property<int?>("VacancyMonths")
                        .HasColumnType("integer")
                        .HasColumnName("vacancy_months");

                    b.HasKey("Id");

                    b.ToTable("contract_details", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.DestSpeciality", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<short?>("ContractDetailsId")
                        .HasColumnType("smallint")
                        .HasColumnName("contract_details_id");

                    b.Property<string>("DestUniversityCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("dest_university_code");

                    b.Property<int?>("InterestedStudents")
                        .HasColumnType("integer")
                        .HasColumnName("interested_students");

                    b.Property<string>("StudyAreaId")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("study_area_id");

                    b.Property<short?>("SubjectLanguageId")
                        .HasColumnType("smallint")
                        .HasColumnName("subject_language_id");

                    b.HasKey("Id");

                    b.HasIndex("ContractDetailsId");

                    b.HasIndex("DestUniversityCode");

                    b.HasIndex("StudyAreaId");

                    b.HasIndex("SubjectLanguageId");

                    b.ToTable("dest_speciality", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.MinGradeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short?>("DestSpecialityId")
                        .HasColumnType("smallint")
                        .HasColumnName("dest_speciality_id");

                    b.Property<float?>("Grade")
                        .HasColumnType("real")
                        .HasColumnName("grade");

                    b.Property<string>("Semester")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("semester");

                    b.HasKey("Id");

                    b.HasIndex("DestSpecialityId");

                    b.ToTable("min_grade_history", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.PwrFaculty", b =>
                {
                    b.ToTable("pwr_faculty", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.PwrSpeciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("pwr_speciality", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.PwrSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ects")
                        .HasColumnType("integer")
                        .HasColumnName("ects");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("integer")
                        .HasColumnName("speciality_id");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityId");

                    b.ToTable("pwr_subject", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.StudyArea", b =>
                {
                    b.Property<string>("StudyDomain")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("study_domain");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description");

                    b.HasKey("StudyDomain")
                        .HasName("study_area_pkey");

                    b.ToTable("study_area", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.SubjectLanguage", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "subject_language_name_key")
                        .IsUnique();

                    b.ToTable("subject_language", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.University", b =>
                {
                    b.Property<string>("ErasmusCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("erasmus_code");

                    b.Property<string>("City")
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasColumnType("citext")
                        .HasColumnName("email");

                    b.Property<string>("Link")
                        .HasColumnType("citext")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("ErasmusCode")
                        .HasName("university_pkey");

                    b.ToTable("university", (string)null);
                });

            modelBuilder.Entity("UniversityApi.DbModels.DestSpeciality", b =>
                {
                    b.HasOne("UniversityApi.DbModels.ContractDetail", "ContractDetails")
                        .WithMany("DestSpecialities")
                        .HasForeignKey("ContractDetailsId")
                        .HasConstraintName("dest_speciality_contract_details_id_fkey");

                    b.HasOne("UniversityApi.DbModels.University", "DestUniversityCodeNavigation")
                        .WithMany("DestSpecialities")
                        .HasForeignKey("DestUniversityCode")
                        .HasConstraintName("dest_speciality_dest_university_code_fkey");

                    b.HasOne("UniversityApi.DbModels.StudyArea", "StudyArea")
                        .WithMany("DestSpecialities")
                        .HasForeignKey("StudyAreaId")
                        .HasConstraintName("dest_speciality_study_area_id_fkey");

                    b.HasOne("UniversityApi.DbModels.SubjectLanguage", "SubjectLanguage")
                        .WithMany("DestSpecialities")
                        .HasForeignKey("SubjectLanguageId")
                        .HasConstraintName("dest_speciality_subject_language_id_fkey");

                    b.Navigation("ContractDetails");

                    b.Navigation("DestUniversityCodeNavigation");

                    b.Navigation("StudyArea");

                    b.Navigation("SubjectLanguage");
                });

            modelBuilder.Entity("UniversityApi.DbModels.MinGradeHistory", b =>
                {
                    b.HasOne("UniversityApi.DbModels.DestSpeciality", "DestSpeciality")
                        .WithMany("MinGradeHistories")
                        .HasForeignKey("DestSpecialityId")
                        .HasConstraintName("min_grade_history_dest_speciality_id_fkey");

                    b.Navigation("DestSpeciality");
                });

            modelBuilder.Entity("UniversityApi.DbModels.PwrSubject", b =>
                {
                    b.HasOne("UniversityApi.DbModels.PwrSpeciality", "Speciality")
                        .WithMany("PwrSubjects")
                        .HasForeignKey("SpecialityId")
                        .HasConstraintName("pwr_subject_speciality_id_fkey");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("UniversityApi.DbModels.ContractDetail", b =>
                {
                    b.Navigation("DestSpecialities");
                });

            modelBuilder.Entity("UniversityApi.DbModels.DestSpeciality", b =>
                {
                    b.Navigation("MinGradeHistories");
                });

            modelBuilder.Entity("UniversityApi.DbModels.PwrSpeciality", b =>
                {
                    b.Navigation("PwrSubjects");
                });

            modelBuilder.Entity("UniversityApi.DbModels.StudyArea", b =>
                {
                    b.Navigation("DestSpecialities");
                });

            modelBuilder.Entity("UniversityApi.DbModels.SubjectLanguage", b =>
                {
                    b.Navigation("DestSpecialities");
                });

            modelBuilder.Entity("UniversityApi.DbModels.University", b =>
                {
                    b.Navigation("DestSpecialities");
                });
#pragma warning restore 612, 618
        }
    }
}
